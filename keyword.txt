List of all Java Keywords:-
----------------------------------


Keywords or Reserved words are the words in a language that are used for some internal process or represent some predefined actions.



Keyword :-
-------------

abstract : Specifies that a class or method will be implemented later, in a subclass. stract is a non-access modifier in java applicable for classes, 
                   and methods but not variables.

boolean : 	 A data type that can hold True and False values only .

break :	 A control statement for breaking out of loops.

byte :		 data type that can hold 8-bit data values .

case : 	used  to  switch statements to mark blocks of text.

catch : 	Catches exceptions generated by try statements

char :		A data type that can hold unsigned 16-bit Unicode characters

class	:	Declares a new class

continue :	Sends control back outside a loop 

default :	Specifies the default block of code in a switch statement

do : 		Starts a do-while loop

double :	A data type that can hold 64-bit floating-point numbers

else :		Indicates alternative branches in an if statement 

enum :	A Java keyword is used to declare an enumerated type. Enumerations extend the base class.

extends :	Indicates that a class is derived from another class or interface 

final :	Indicates that a variable holds a constant value or that a method will not be overridden

finally :	Indicates a block of code in a try-catch structure that will always be executed

implements :	Specifies that a class implements an interface 

instanceof :	Indicates whether an object is an instance of a specific class or implements an interface 

static :		Indicates that a variable or method is a class method (rather than being limited to one particular object)

super	 : 		Refers to a class’s base class (used in a method or class constructor) 

volatile :		This indicates that a variable may change asynchronously

try :			Starts a block of code that will be tested for exceptions 

this :			Refers to the current object in a method or constructor 




static Keyword in Java:-

The static keyword in Java is mainly used for memory management. 
The static keyword in Java is used to share the same variable or method of a given class. 
The users can apply static keywords with variables, methods, blocks, and nested classes. 


The static keyword is a non-access modifier in Java that is applicable for the

Block
Class
Method
Variable

Static blocks
If you need to do the computation in order to initialize your static variables,
 you can declare a static block that gets executed exactly once, when the class is first loaded. 


Code:

class Test
{
    // static variable  for static block static variable is mantory.
//ager static variable decleared nhee hai too error milagi non-static felid can not refrance.
    static int a = 10;
    static int b;
     
    // static block
    static {
        System.out.println("Static block initialized.");
        b = a * 4;
    }
 
    public static void main(String[] args)
    {
       System.out.println("from main");
       System.out.println("Value of a : "+a);
       System.out.println("Value of b : "+b);
    }
}


Static variables
When a variable is declared as static, then a single copy of the variable is created and shared among 
all objects at the class level. Static variables are, essentially, global variables. 

CODE:-
class Test
{
    // static variable
    static int a = m1();
    
    static {
        System.out.println("Inside static block");
    }
     
    // static method
    static int m1() {
        System.out.println("from m1");
        return 20;
    }
     
    // static method(main !!)
    public static void main(String[] args)
    {
       System.out.println("Value of a : "+a);
       System.out.println("from main");
    }
}

Static methods
When a method is declared with the static keyword, it is known as the static method. 
The most common example of a static method is the main( ) method. As discussed above, 
Any static member can be accessed before any objects of its class are created, and without reference to any object


CODE:
class Test
{
    // static variable
    static int a = m1();
    
    static {
        System.out.println("Inside static block");
    }
     
    // static method
    static int m1() {
        System.out.println("from m1");
        return 20;
    }
     
    // static method(main !!)
    public static void main(String[] args)
    {
       System.out.println("Value of a : "+a);
       System.out.println("from main");

m1();

    }
}


Final Code:-

// A java program to demonstrate use of
// static keyword with methods and variables

// Student class
class Student {
	String name;
	int rollNo;

	// static variable
	static String cllgName;

	// static counter to set unique roll no
	static int counter = 0;

	public Student(String name)
	{
		this.name = name;

		this.rollNo = setRollNo();
	}

	// getting unique rollNo
	// through static variable(counter)
	static int setRollNo()
	{
		counter++;
		return counter;
	}

	// static method
	static void setCllg(String name) { cllgName = name; }

	// instance method
	void getStudentInfo()
	{
		System.out.println("name : " + this.name);
		System.out.println("rollNo : " + this.rollNo);

		// accessing static variable
		System.out.println("cllgName : " + cllgName);
	}
}

// Driver class
public class StaticDemo {
	public static void main(String[] args)
	{
		// calling static method
		// without instantiating Student class
		Student.setCllg("XYZ");

		Student s1 = new Student("Alice");
		Student s2 = new Student("Bob");

		s1.getStudentInfo();
		s2.getStudentInfo();
	}
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


final Keyword in Java:-

final keyword is used in different contexts. First of all, final is a non-access modifier applicable only to a variable, a method, or a class.






--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
final, finally and finalize in Java:-


final :-

final (lowercase) is a reserved keyword in java. We can’t use it as an identifier, as it is reserved.
We can use this keyword with variables, methods, and also with classes. 
The final keyword in java has a different meaning depending upon whether it is applied to a variable, class, or method.




final with Variables: The value of the variable cannot be changed once initialized.


CODE:-

class A {
	public static void main(String[] args)
	{
		// Non final variable
		int a = 5;

		// final variable
		final int b = 6;

		// modifying the non final variable : Allowed
		a++;

		// modifying the final variable :
		// Immediately gives Compile Time error.
		b++;
	}
}

enum :-

Java programming language में enum एक class है जो group of constants को represent करती है , या कह सकते हैं
 group of constants की class को ही enum कहते हैं। यह एक तरह से final variable की तरह है बस इसमें आप एक साथ कई variables और methods define कर सकते हैं। 
enum में define किये गए सभी values immutable होती हैं 
means एक बार define करने के बाद इन्हे update / change नहीं कर सकते हैं।


public class EnumTest { 
  // define enum.
  enum Plan {
    Silver,
    Gold,
    Platinum
  }

  public static void main(String[] args) { 
    System.out.println("Basic plan : "+ Plan.Silver); 
    // you can also access by createting enum variable.
    Plan basic_plan = Plan.Silver; 
    System.out.println("basic_plan : "+ basic_plan); 
  } 
}







