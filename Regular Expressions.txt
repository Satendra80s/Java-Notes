Regular Expressions in Java:-
---------------------------------------------

Regular Expressions or Regex (in short) in Java is an API for defining String patterns that can be used for searching,
 manipulating, and editing a string in Java. 
Email validation and passwords are a few areas of strings where Regex is widely used to define the constraints. 

Regex in Java provides 3 classes and 1 interface which are as follows:-

* Pattern Class  : Used for defining patterns.

* Matcher Class : Used for performing match operations on text using patterns.

* PatternSyntaxException Class : Used for indicating syntax error in a regular expression pattern.

* MatchResult Interface : Used for representing the result of a match operation.



Pattern Class:-
-------------------
This class is a compilation of regular expressions that can be used to define various types of patterns, providing no public constructors. 
This can be created by invoking the compile() method which accepts a regular expression as the first argument, thus returning a pattern after execution.

CODE:-
---------

import java.utill.*

class GFG {
 
    public static void main(String args[])
    {
 
        
        System.out.println(Pattern.matches(
            "geeksforge*ks", "geeksforgeeks"));
 
        System.out.println(
            Pattern.matches("g*geeks*", "geeksfor"));
    }
}


Matcher class:-
------------------
This object is used to perform match operations for an input string in Java, thus interpreting the previously explained patterns.
This too defines no public constructors. 

Code:-

class GFG {
 
  
    public static void main(String args[])
    {
 
       
        Pattern pattern = Pattern.compile("geeks");
 
       
        Matcher m = pattern.matcher("geeksforgeeks.org");
 
        while (m.find())

            System.out.println("Pattern found from "
                               + m.start() + " to "
                               + (m.end() - 1));
    }
}



Matcher pattern() method in Java :-
-----------------------------------------------

The pattern() method of Matcher Class is used to get the pattern to be matched by this matcher.

Syntax:

public Pattern pattern()


import java.util.regex.*;

public class GFG {
	public static void main(String[] args)
	{

		
		String regex = "Geeks";

		
		Pattern pattern
			= Pattern.compile(regex);
		String stringToBeMatched
			= "GeeksForGeeks";
		Matcher matcher
			= pattern.matcher(stringToBeMatched);
		System.out.println("Pattern: "
						+ matcher.pattern());
	}
}



Pattern pattern() method in Java :-
----------------------------------------------

The pattern() method of the Pattern class in Java is used to get the regular expression which is compiled to create this pattern. 

CODE:-


import java.util.regex.*;

public class GFG {
	public static void main(String[] args)
	{

		// create a REGEX String
		String REGEX = "(.*)(for)(.*)?";

		// create the string
		// in which you want to search
		String actualString = "code of Machine";

		// create pattern
		Pattern pattern1 = Pattern.compile(REGEX);

		// find the regular expression of pattern
		String RegularExpression = pattern1.pattern();

		System.out.println("Pattern's RegularExpression = "
						+ RegularExpression);
	}
}











